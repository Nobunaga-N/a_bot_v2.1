from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, QFrame,
    QLineEdit, QMessageBox, QApplication
)
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QIcon, QFont

from gui.styles import Styles


class LicenseWidget(QWidget):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–µ–π."""

    def __init__(self, license_validator, parent=None):
        super().__init__(parent)
        self.license_validator = license_validator

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        self.init_ui()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏—Ü–µ–Ω–∑–∏–∏
        self.update_license_info()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–∏—Ü–µ–Ω–∑–∏–∏."""
        # –û—Å–Ω–æ–≤–Ω–æ–π –ª—ç–π–∞—É—Ç
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(20)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        title_layout = QVBoxLayout()

        title_label = QLabel("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–µ–π")
        title_label.setObjectName("title")
        title_label.setStyleSheet(f"""
            font-size: 22px;
            font-weight: bold;
            color: {Styles.COLORS['text_primary']};
        """)
        title_layout.addWidget(title_label)

        subtitle_label = QLabel("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è")
        subtitle_label.setObjectName("subtitle")
        subtitle_label.setStyleSheet(f"""
            font-size: 14px;
            color: {Styles.COLORS['text_secondary']};
        """)
        title_layout.addWidget(subtitle_label)

        layout.addLayout(title_layout)

        # –°–µ–∫—Ü–∏—è "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—Ü–µ–Ω–∑–∏–∏"
        license_frame = QFrame()
        license_frame.setObjectName("section_box")
        license_layout = QVBoxLayout(license_frame)
        license_layout.setContentsMargins(0, 0, 0, 0)
        license_layout.setSpacing(0)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        license_header = QLabel("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—Ü–µ–Ω–∑–∏–∏")
        license_header.setObjectName("header")
        license_layout.addWidget(license_header)

        # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ü–∏–∏
        license_content = QWidget()
        license_content_layout = QVBoxLayout(license_content)
        license_content_layout.setContentsMargins(15, 15, 15, 15)
        license_content_layout.setSpacing(15)

        # –°—Ç–∞—Ç—É—Å –ª–∏—Ü–µ–Ω–∑–∏–∏ —Å –∏–∫–æ–Ω–∫–æ–π
        license_status_layout = QHBoxLayout()

        # –ò–∫–æ–Ω–∫–∞
        license_icon = QLabel()
        license_icon.setFixedSize(48, 48)
        license_icon.setStyleSheet(f"""
            background-color: {Styles.COLORS['background_medium']};
            border-radius: 24px;
        """)

        # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –∏–∫–æ–Ω–∫–∞)
        license_icon_text = QLabel("üîë")
        license_icon_text.setStyleSheet(f"""
            font-size: 20px;
            color: {Styles.COLORS['primary']};
        """)

        license_icon_layout = QHBoxLayout(license_icon)
        license_icon_layout.setContentsMargins(0, 0, 0, 0)
        license_icon_layout.addWidget(license_icon_text, alignment=Qt.AlignmentFlag.AlignCenter)

        license_status_layout.addWidget(license_icon)

        # –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        license_status_text = QVBoxLayout()

        self.license_status_title = QLabel("–õ–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
        self.license_status_title.setStyleSheet(f"""
            font-size: 16px;
            font-weight: bold;
            color: {Styles.COLORS['primary']};
        """)
        license_status_text.addWidget(self.license_status_title)

        self.license_status_subtitle = QLabel("–í–∞—à–∞ –ª–∏—Ü–µ–Ω–∑–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        self.license_status_subtitle.setWordWrap(True)
        self.license_status_subtitle.setStyleSheet(f"color: {Styles.COLORS['text_secondary']};")
        license_status_text.addWidget(self.license_status_subtitle)

        license_status_layout.addLayout(license_status_text)
        license_status_layout.addStretch()

        license_content_layout.addLayout(license_status_layout)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–æ–∫–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏ (3 –∫–æ–ª–æ–Ω–∫–∏)
        license_info_layout = QHBoxLayout()
        license_info_layout.setSpacing(20)

        # –ö–æ–ª–æ–Ω–∫–∞ "–°—Ç–∞—Ç—É—Å"
        status_layout = QVBoxLayout()

        status_title = QLabel("–°—Ç–∞—Ç—É—Å")
        status_title.setStyleSheet(f"color: {Styles.COLORS['text_secondary']};")
        status_layout.addWidget(status_title)

        self.status_indicator_layout = QHBoxLayout()
        self.status_indicator = QLabel("‚óè")
        self.status_indicator.setStyleSheet(f"color: {Styles.COLORS['secondary']}; font-size: 18px;")
        self.status_indicator_layout.addWidget(self.status_indicator)

        self.status_value = QLabel("–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞")
        self.status_value.setStyleSheet(f"color: {Styles.COLORS['text_primary']};")
        self.status_indicator_layout.addWidget(self.status_value)

        status_layout.addLayout(self.status_indicator_layout)
        license_info_layout.addLayout(status_layout)

        # –ö–æ–ª–æ–Ω–∫–∞ "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ"
        expiration_layout = QVBoxLayout()

        expiration_title = QLabel("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ")
        expiration_title.setStyleSheet(f"color: {Styles.COLORS['text_secondary']};")
        expiration_layout.addWidget(expiration_title)

        self.expiration_value = QLabel("31.12.2025")
        self.expiration_value.setStyleSheet(f"color: {Styles.COLORS['text_primary']};")
        expiration_layout.addWidget(self.expiration_value)

        license_info_layout.addLayout(expiration_layout)

        # –ö–æ–ª–æ–Ω–∫–∞ "–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π"
        days_left_layout = QVBoxLayout()

        days_left_title = QLabel("–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π")
        days_left_title.setStyleSheet(f"color: {Styles.COLORS['text_secondary']};")
        days_left_layout.addWidget(days_left_title)

        self.days_left_value = QLabel("283")
        self.days_left_value.setStyleSheet(f"color: {Styles.COLORS['primary']};")
        days_left_layout.addWidget(self.days_left_value)

        license_info_layout.addLayout(days_left_layout)

        license_content_layout.addLayout(license_info_layout)

        license_layout.addWidget(license_content)

        layout.addWidget(license_frame)

        # –°–µ–∫—Ü–∏—è "–û—Ç–ø–µ—á–∞—Ç–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
        fingerprint_frame = QFrame()
        fingerprint_frame.setObjectName("section_box")
        fingerprint_layout = QVBoxLayout(fingerprint_frame)
        fingerprint_layout.setContentsMargins(0, 0, 0, 0)
        fingerprint_layout.setSpacing(0)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        fingerprint_header = QLabel("–û—Ç–ø–µ—á–∞—Ç–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        fingerprint_header.setObjectName("header")
        fingerprint_layout.addWidget(fingerprint_header)

        # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ü–∏–∏
        fingerprint_content = QWidget()
        fingerprint_content_layout = QVBoxLayout(fingerprint_content)
        fingerprint_content_layout.setContentsMargins(15, 15, 15, 15)
        fingerprint_content_layout.setSpacing(15)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        fingerprint_info = QLabel(
            "–≠—Ç–æ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏ –Ω–∞ –¥–∞–Ω–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. "
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞."
        )
        fingerprint_info.setWordWrap(True)
        fingerprint_info.setStyleSheet(f"color: {Styles.COLORS['text_primary']};")
        fingerprint_content_layout.addWidget(fingerprint_info)

        # –û—Ç–ø–µ—á–∞—Ç–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        fingerprint_input_layout = QHBoxLayout()

        self.fingerprint_input = QLineEdit()
        self.fingerprint_input.setReadOnly(True)
        self.fingerprint_input.setStyleSheet(f"""
            background-color: {Styles.COLORS['background_input']};
            color: {Styles.COLORS['text_secondary']};
            padding: 10px;
        """)
        fingerprint_input_layout.addWidget(self.fingerprint_input)

        copy_button = QPushButton("–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å")
        copy_button.setFixedWidth(150)
        copy_button.clicked.connect(self.copy_fingerprint)
        fingerprint_input_layout.addWidget(copy_button)

        fingerprint_content_layout.addLayout(fingerprint_input_layout)

        fingerprint_layout.addWidget(fingerprint_content)

        layout.addWidget(fingerprint_frame)

        # –°–µ–∫—Ü–∏—è "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏"
        activation_frame = QFrame()
        activation_frame.setObjectName("section_box")
        activation_layout = QVBoxLayout(activation_frame)
        activation_layout.setContentsMargins(0, 0, 0, 0)
        activation_layout.setSpacing(0)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        activation_header = QLabel("–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏")
        activation_header.setObjectName("header")
        activation_layout.addWidget(activation_header)

        # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ü–∏–∏
        activation_content = QWidget()
        activation_content_layout = QVBoxLayout(activation_content)
        activation_content_layout.setContentsMargins(15, 15, 15, 15)
        activation_content_layout.setSpacing(15)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        activation_info = QLabel("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        activation_info.setStyleSheet(f"color: {Styles.COLORS['text_primary']};")
        activation_content_layout.addWidget(activation_info)

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
        self.license_key_input = QLineEdit()
        self.license_key_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á")
        self.license_key_input.setStyleSheet(f"""
            padding: 10px;
        """)
        activation_content_layout.addWidget(self.license_key_input)

        # –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        activate_button_layout = QHBoxLayout()
        activate_button_layout.addStretch()

        activate_button = QPushButton("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é")
        activate_button.setObjectName("success")
        activate_button.setFixedWidth(200)
        activate_button.clicked.connect(self.activate_license)
        activate_button_layout.addWidget(activate_button)

        activation_content_layout.addLayout(activate_button_layout)

        activation_layout.addWidget(activation_content)

        layout.addWidget(activation_frame)

        # –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Ç–ø–µ—á–∞—Ç–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        self.update_fingerprint()

    def update_license_info(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Ü–µ–Ω–∑–∏–∏."""
        license_info = self.license_validator.get_license_info()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        status = license_info.get("status", "unknown")
        status_translations = {
            "valid": "–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞",
            "expired": "–ò—Å—Ç–µ–∫–ª–∞",
            "missing": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
            "invalid": "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞",
            "error": "–û—à–∏–±–∫–∞",
            "unknown": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        }

        status_text = status_translations.get(status, status.capitalize())
        self.status_value.setText(status_text)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if status == "valid":
            self.license_status_title.setText("–õ–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
            self.license_status_title.setStyleSheet(
                f"color: {Styles.COLORS['secondary']}; font-size: 16px; font-weight: bold;")
            self.license_status_subtitle.setText("–í–∞—à–∞ –ª–∏—Ü–µ–Ω–∑–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")

            self.status_indicator.setStyleSheet(f"color: {Styles.COLORS['secondary']}; font-size: 18px;")
            self.status_value.setStyleSheet(f"color: {Styles.COLORS['secondary']};")
        elif status == "expired":
            self.license_status_title.setText("–õ–∏—Ü–µ–Ω–∑–∏—è –∏—Å—Ç–µ–∫–ª–∞")
            self.license_status_title.setStyleSheet(
                f"color: {Styles.COLORS['accent']}; font-size: 16px; font-weight: bold;")
            self.license_status_subtitle.setText("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏—Å—Ç–µ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é")

            self.status_indicator.setStyleSheet(f"color: {Styles.COLORS['accent']}; font-size: 18px;")
            self.status_value.setStyleSheet(f"color: {Styles.COLORS['accent']};")
        else:
            self.license_status_title.setText("–õ–∏—Ü–µ–Ω–∑–∏—è –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            self.license_status_title.setStyleSheet(
                f"color: {Styles.COLORS['warning']}; font-size: 16px; font-weight: bold;")
            self.license_status_subtitle.setText("–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é —Å –ø–æ–º–æ—â—å—é –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞")

            self.status_indicator.setStyleSheet(f"color: {Styles.COLORS['warning']}; font-size: 18px;")
            self.status_value.setStyleSheet(f"color: {Styles.COLORS['warning']};")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è
        expiration = license_info.get("expiration")
        if expiration:
            self.expiration_value.setText(expiration.strftime("%d.%m.%Y"))
        else:
            self.expiration_value.setText("–ù/–î")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π
        days_left = license_info.get("days_left", 0)
        self.days_left_value.setText(str(days_left))

    def update_fingerprint(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞."""
        fingerprint = self.license_validator.fingerprint.generate()
        if fingerprint:
            self.fingerprint_input.setText(fingerprint)
        else:
            self.fingerprint_input.setText("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø–µ—á–∞—Ç–∫–∞")

    def copy_fingerprint(self):
        """–ö–æ–ø–∏—Ä—É–µ—Ç –æ—Ç–ø–µ—á–∞—Ç–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞."""
        fingerprint = self.fingerprint_input.text()
        if fingerprint:
            clipboard = QApplication.clipboard()
            clipboard.setText(fingerprint)

            # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
            sender = self.sender()
            original_text = sender.text()
            sender.setText("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
            from PyQt6.QtCore import QTimer
            QTimer.singleShot(1500, lambda: sender.setText(original_text))

    def activate_license(self):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏—é —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º –∫–ª—é—á–æ–º."""
        license_key = self.license_key_input.text().strip()

        if not license_key:
            QMessageBox.warning(
                self,
                "–ü—É—Å—Ç–æ–π –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á",
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á."
            )
            return

        if self.license_validator.verify_license(license_key):
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á
            self.license_validator.storage.save_license(license_key)

            QMessageBox.information(
                self,
                "–õ–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞",
                "–í–∞—à–∞ –ª–∏—Ü–µ–Ω–∑–∏—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!"
            )

            # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            self.license_key_input.clear()

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Ü–µ–Ω–∑–∏–∏
            self.update_license_info()
        else:
            QMessageBox.critical(
                self,
                "–û—à–∏–±–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏",
                "–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )